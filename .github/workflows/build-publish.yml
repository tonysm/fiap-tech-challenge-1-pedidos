on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      # - name: Test and Coverage
      #   run: npm run test:cov

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=fiap-tech-challenge-soat1
            -Dsonar.projectKey=fiap-tech-challenge-soat1_fiap-tech-challenge-1-pedidos
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.sources=src/
            -Dsonar.exclusions=**/*.spec.ts
            -Dsonar.verbose=true
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

      - name: Compute revision
        id: revision
        run: echo "sha_short=v$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Setup Docker
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: docker build -t pedidos-service-tech-challenge:${{ steps.revision.outputs.sha_short }} .

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v0.3.0
        with:
          project_id: ${{vars.PROJECT_ID}}
          service_account_key: ${{secrets.SERVICE_ACCOUNT_KEY}}
          export_default_credentials: true

      - name: Auth gcloud docker
        run: gcloud auth configure-docker

      - name: Push docker image to gcp container registry
        env:
          REVISION: 2.1
        run: |-
          docker tag pedidos-service-tech-challenge:${{ steps.revision.outputs.sha_short }} gcr.io/${{vars.PROJECT_ID}}/pedidos-service-tech-challenge:${{ steps.revision.outputs.sha_short }}
          docker push gcr.io/${{vars.PROJECT_ID}}/pedidos-service-tech-challenge:${{ steps.revision.outputs.sha_short }}

      - name: Deploy to CloudRun
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          flags: ${{vars.DEPLOY_CONFIGS}}
          env_vars: |
            PRODUCAO_PROVIDER=api
            PRODUCAO_API_URL=${{vars.DEPLOY_PRODUCAO_API_URL}}
            PAGAMENTOS_PROVIDER=api
            PAGAMENTOS_API_URL=${{vars.DEPLOY_PAGAMENTOS_API_URL}}
            DB_USE_CLOUDSQL_SOCKET=true
            GCP_PROJECT_ID=${{vars.PROJECT_ID}}
          secrets: |
            DB_HOST=${{vars.DEPLOY_DB_HOST_SECRET_NAME}}
            DB_DATABASE=${{vars.DEPLOY_DB_DATABASE_SECRET_NAME}}
            DB_USERNAME=${{vars.DEPLOY_DB_USERNAME_SECRET_NAME}}
            DB_PASSWORD=${{vars.DEPLOY_DB_PASSWORD_SECRET_NAME}}
          service: ${{vars.SERVICE_NAME}}
          image: gcr.io/${{vars.PROJECT_ID}}/pedidos-service-tech-challenge:${{ steps.revision.outputs.sha_short }}
          region: ${{vars.DEPLOY_REGION}}
